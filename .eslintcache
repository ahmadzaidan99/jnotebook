[{"C:\\Users\\zaida\\Documents\\GitHub\\jnotebook\\jnotebook\\src\\index.tsx":"1","C:\\Users\\zaida\\Documents\\GitHub\\jnotebook\\jnotebook\\src\\plugins\\unpkg-path-plugin.ts":"2","C:\\Users\\zaida\\Documents\\GitHub\\jnotebook\\jnotebook\\src\\plugins\\fetch-plugin.ts":"3","C:\\Users\\zaida\\Documents\\GitHub\\jnotebook\\jnotebook\\src\\components\\code-editor.tsx":"4"},{"size":2424,"mtime":1616025016006,"results":"5","hashOfConfig":"6"},{"size":860,"mtime":1615681924819,"results":"7","hashOfConfig":"6"},{"size":1863,"mtime":1615859679759,"results":"8","hashOfConfig":"6"},{"size":2205,"mtime":1609611928000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"15qnrdi",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\zaida\\Documents\\GitHub\\jnotebook\\jnotebook\\src\\index.tsx",["20"],"import \"bulmaswatch/superhero/bulmaswatch.min.css\";\r\nimport * as esbuild from \"esbuild-wasm\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { unpkgPathPlugin } from \"./plugins/unpkg-path-plugin\";\r\nimport { fetchPlugin } from \"./plugins/fetch-plugin\";\r\nimport CodeEditor from \"./components/code-editor\";\r\n\r\nconst App = () => {\r\n  const ref = useRef<any>();\r\n  const iframe = useRef<any>();\r\n  const [input, setInput] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  const startService = async () => {\r\n    ref.current = await esbuild.startService({\r\n      worker: true,\r\n      wasmURL: \"https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm\",\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    startService();\r\n  }, []);\r\n\r\n  const onClick = async () => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n\r\n    iframe.current.srcdoc = html;\r\n\r\n    const result = await ref.current.build({\r\n      entryPoints: [\"index.js\"],\r\n      bundle: true,\r\n      write: false,\r\n      plugins: [unpkgPathPlugin(), fetchPlugin(input)],\r\n      define: {\r\n        \"process.env.NODE_ENV\": '\"production\"',\r\n        global: \"window\",\r\n      },\r\n    });\r\n\r\n    // setCode(result.outputFiles[0].text);\r\n    iframe.current.contentWindow.postMessage(result.outputFiles[0].text, \"*\");\r\n  };\r\n\r\n  const html = `\r\n    <html>\r\n      <head></head>\r\n      <body>\r\n        <div id=\"root\"></div>\r\n        <script>\r\n          window.addEventListener('message', (event) => {\r\n            try {\r\n              eval(event.data);\r\n            } catch (err) {\r\n              const root = document.querySelector('#root');\r\n              root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\r\n              console.error(err);\r\n            }\r\n          }, false);\r\n        </script>\r\n      </body>\r\n    </html>\r\n  `;\r\n\r\n  return (\r\n    <div>\r\n      <CodeEditor\r\n        initialValue=\"const a = 1;\"\r\n        onChange={(value) => setInput(value)}\r\n      />\r\n      <textarea\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n      ></textarea>\r\n      <div>\r\n        <button onClick={onClick}>Submit</button>\r\n      </div>\r\n      <pre>{code}</pre>\r\n      <iframe\r\n        title=\"preview\"\r\n        ref={iframe}\r\n        sandbox=\"allow-scripts\"\r\n        srcDoc={html}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n",["21","22"],"C:\\Users\\zaida\\Documents\\GitHub\\jnotebook\\jnotebook\\src\\plugins\\unpkg-path-plugin.ts",[],"C:\\Users\\zaida\\Documents\\GitHub\\jnotebook\\jnotebook\\src\\plugins\\fetch-plugin.ts",[],"C:\\Users\\zaida\\Documents\\GitHub\\jnotebook\\jnotebook\\src\\components\\code-editor.tsx",[],{"ruleId":"23","severity":1,"message":"24","line":13,"column":16,"nodeType":"25","messageId":"26","endLine":13,"endColumn":23},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},"@typescript-eslint/no-unused-vars","'setCode' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-global-assign","no-unsafe-negation"]